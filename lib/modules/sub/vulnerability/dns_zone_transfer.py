#!/usr/bin/python
# -*- coding: UTF-8 -*-
"""
前言：切勿将本工具和技术用于网络犯罪，三思而后行！
文件描述： 域传输漏洞检测
"""
from dataclasses import dataclass
from typing import Any

from dns import resolver, zone, query

from lib.core.log import logger


@dataclass()
class AXFR(object):
    domain: str
    results = set()

    def ns(self) -> None:
        """对域名进行ns记录查询"""
        try:
            answers: resolver.Answer = resolver.resolve(self.domain, "NS")
        except:
            logger.error(f'No NS record found for {self.domain}')
            return
        nsservers: list = [str(answer) for answer in answers]
        if not nsservers:
            return
        for server in nsservers:
            self.axfr(server)

    def axfr(self, server: str) -> None:
        logger.debug(f'Trying to perform domain transfer in {server} of {self.domain}')
        try:
            xfr: Any = query.xfr(where=server, zone=self.domain, timeout=5, lifetime=10)
            zone.from_xfr(xfr)
        except:
            # logger.debug(f'Domain transfer to server {server} of {self.domain} failed')
            return
        names: list = zone.nodes.keys()
        for name in names:
            full_domain: str = str(name) + '.' + self.domain
            # print(full_domain)
            self.results.add(full_domain)

    def run(self) -> set:
        logger.info(f"Running dns zone transfer...")
        self.ns()
        if self.results:
            # print(f'Found the domain transfer record of {self.domain} on {server}')
            logger.info(f"[+] Dns zone transmission vulnerability exists!")
        logger.info(f"Dns zone transfer： {len(self.results)} results found!")
        # print(f"Dns zone transfer： {self.results}")
        return self.results


if __name__ == '__main__':
    AXFR('vulhub.org').run()
