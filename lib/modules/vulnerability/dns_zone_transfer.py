#!/usr/bin/env python 
# -*- coding : utf-8-*-
# coding:unicode_escape
"""
作者：jammny
文件描述：
查询域名的NS记录(域名服务器记录，记录该域名由哪台域名服务器解析)，检查查出的域名服务器是
否开启DNS域传送，如果开启且没做访问控制和身份验证便加以利用获取域名的所有记录。
DNS域传送(DNS zone transfer)指的是一台备用域名服务器使用来自主域名服务器的数据刷新自己
的域数据库，目的是为了做冗余备份，防止主域名服务器出现故障时 dns 解析不可用。
当主服务器开启DNS域传送同时又对来请求的备用服务器未作访问控制和身份验证便可以利用此漏洞获
取某个域的所有记录。
"""
import dns.resolver
import dns.zone

from lib.config.logger import logger


class AXFR:
    def __init__(self, domain):
        self.domain = domain
        self.results = []

    def axfr(self, server):
        """
        Perform domain transfer

        :param server: domain server
        """
        logger.info(f'Trying to perform domain transfer in {server} of {self.domain}')
        try:
            xfr = dns.query.xfr(where=server, zone=self.domain,
                                timeout=5.0, lifetime=10.0)
            zone = dns.zone.from_xfr(xfr)
        except Exception as e:
            logger.debug(f'Domain transfer to server {server} of {self.domain} failed')
            return
        names = zone.nodes.keys()
        for name in names:
            full_domain = str(name) + '.' + self.domain
            logger.info(full_domain)
            record = zone[name].to_text(name)
            self.results.append(record)
        if self.results:
            logger.info(f'Found the domain transfer record of {self.domain} on {server}')
            logger.info('\n'.join(self.results))

    def check(self):
        """
        check
        """
        try:
            answers = dns.resolver.resolve(self.domain, "NS")
        except Exception as e:
            logger.error(e.args)
            logger.error(1)
            return
        nsservers = [str(answer) for answer in answers]
        if not len(nsservers):
            logger.warn(f'No name server record found for {self.domain}')
            return
        print(nsservers)
        for server in nsservers:
            self.axfr(server)

    def run(self):
        """
        类执行入口
        """
        self.check()

if __name__ == '__main__':
    AXFR('www.vulhub.org').run()
