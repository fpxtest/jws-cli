#!/usr/bin/env python
# coding=utf-8
import dns.resolver
import dns.zone

from lib.config.logger import logger


class AXFR:
    def __init__(self, domain):
        self.domain = domain
        self.results = set()

    def axfr(self, server):
        logger.debug(f'Trying to perform domain transfer in {server} of {self.domain}')
        try:
            xfr = dns.query.xfr(where=server, zone=self.domain,
                                timeout=5.0, lifetime=10.0)
            zone = dns.zone.from_xfr(xfr)
        except:
            # logger.debug(f'Domain transfer to server {server} of {self.domain} failed')
            return

        names = zone.nodes.keys()

        for name in names:
            full_domain = str(name) + '.' + self.domain
            # print(full_domain)
            self.results.add(full_domain)

    def ns(self):
        """
        对域名进行ns记录查询
        :return:
        """
        try:
            answers = dns.resolver.resolve(self.domain, "NS")
        except:
            logger.error(f'No NS record found for {self.domain}')
            return
        nsservers = [str(answer) for answer in answers]
        if nsservers:
            for server in nsservers:
                self.axfr(server)

    def run(self):
        """
        类执行入口
        """
        logger.info(f"Running dns zone transfer...")
        self.ns()
        results = list(self.results)
        if results:
            # print(f'Found the domain transfer record of {self.domain} on {server}')
            logger.warning(f"[+] Dns zone transmission vulnerability exists!")
            logger.info(f"Dns zone transfer： {len(results)} results found!")
            logger.debug(f"Dns zone transfer：： {results}")
        return results


if __name__ == '__main__':
    AXFR('vulhub.org').run()
